.TH "RPIO" "1" "March 15, 2013" "0.10.1" "RPIO"
.SH NAME
rpio \- RPIO Documentation
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.\" Man page generated from reStructuredText.
.
.sp
\fBrpio\fP includes two command\-line tools which allow you to inspect and manipulate GPIO\(aqs system wide
(including those used by other processes). The BCM GPIO numbering scheme is used by default.
.INDENT 0.0
.IP \(bu 2
\fBrpio\fP, a command\-line tool to inspect and manipulate GPIOs
.IP \(bu 2
\fBrpio\-curses\fP, \fBrpio\fP with a graphical user interface for the terminal
.UNINDENT
.SH RPIO-CURSES
.sp
\fBrpio\-curses\fP is a graphical user interface for the terminal to inspect and manipulate GPIOs. Its part of RPIO since
version 0.8.4. With \fBrpio\-curses\fP you can see all GPIOs on the board with function and state, and change every
possible parameter. The list is updated every second, and instantly if you change something. You can start \fBrpio\-curses\fP in the command line by typing:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ rpio\-curses
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Here are a few screenshots of \fBrpio\-curses\fP in action:
[image]
[image]
.SH RPIO
.sp
\fBrpio \-\-inspect\-all\fP (or \fB\-I\fP) is perhaps the most popular command, which shows you all gpios
on the board, with function and state. Here is an overview of all the functions of \fBrpio\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Show the help page:

    $ rpio \-h

Inspect the function and state of gpios (with \-i/\-\-inspect):

    $ rpio \-i 7
    $ rpio \-i 7,8,9
    $ rpio \-i 1\-9

    # Example output for \(garpio \-i 1\-9\(ga (non\-existing are ommitted):
    GPIO 2: ALT0   (1)
    GPIO 3: ALT0   (1)
    GPIO 4: INPUT  (0)
    GPIO 7: OUTPUT (0)
    GPIO 8: INPUT  (1)
    GPIO 9: INPUT  (0)

Inspect all GPIO\(aqs on this board (with \-I/\-\-inspect\-all):

    $ rpio \-I

Set GPIO 7 output to \(ga1\(ga (or \(ga0\(ga) (with \-s/\-\-set):

    $ rpio \-s 7:1

    You can only write to pins that have been set up as OUTPUT. You can
    set this yourself with \(ga\-\-setoutput <gpio\-id>\(ga.

Wait for interrupt events on GPIOs (with \-w/\-\-wait_for_interrupts). You
can specify an edge (eg. \(ga:rising\(ga; default=\(aqboth\(aq) as well as \(ga:pullup\(ga,
\(ga:pulldown\(ga or \(gapulloff\(ga.

    $ rpio \-w 7
    $ rpio \-w 7:rising
    $ rpio \-w 7:falling:pullup

    $ rpio \-w 7:rising:pullup,17,18
    $ rpio \-w 1\-9

Setup a pin as INPUT (optionally with software resistor):

    $ rpio \-\-setinput 7
    $ rpio \-\-setinput 7:pullup
    $ rpio \-\-setinput 7:pulldown

Setup a pin as OUTPUT (optionally with an initial value (0 or 1)):

    $ rpio \-\-setoutput 8
    $ rpio \-\-setoutput 8:1

Show Raspberry Pi system info:

    $ rpio \-\-sysinfo

    # Example output:
    000e: Model B, Revision 2.0, RAM: 256 MB, Maker: Sony
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
You can update the \fBRPIO\fP package to the latest version (equivalent to \fBeasy_install \-U RPIO\fP):
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ rpio \-\-update\-rpio
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Install (and update) the \fBrpio\fP manpage:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ rpio \-\-update\-man
$ man rpio
.ft P
.fi
.UNINDENT
.UNINDENT
.SH AUTHOR
Chris Hager <chris@linuxuser.at>
.SH COPYRIGHT
2013, Chris Hager <chris@linuxuser.at>
.\" Generated by docutils manpage writer.
.
